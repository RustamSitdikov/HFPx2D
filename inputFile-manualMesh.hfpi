#
# HFPx2D project.
#
# Created by Lorenzo Benedetti on 06.09.17.
# Copyright (c) ECOLE POLYTECHNIQUE FEDERALE DE LAUSANNE, Switzerland,
# Geo-Energy Laboratory, 2016-2017.  All rights reserved.
# See the LICENSE.TXT file for more details.
#
#

###########   GEOMETRY   ###########
[[geometry]]
    #### Manual mesh generation: FOR 1D MESHES ONLY ####

    # type of mesh generation
    mesh_generation = "manual"

    # The .hpfm mesh file provides:
    # - nodes coordinates
    # - mesh connectivity
    # - interpolation order
    # - dof handles for both displacements and pressure
    # - fracture and material IDs
    mesh_input_file = "myMesh.hfpm"


########################################################################################################################
## Properites of the material PER fracture
# associate properties to layers (i.e. materials) as loading the material
[[solid]]

    Young_modulus=1.0
    Poisson_ratio=0.24
    ## Also available
    # Lame_first
    # Bulk_modulus
    # Shear_modulus or Lame_second

    [material0]

        solid_evolution_type = "Mohr-Coulomb"

        cohesion = 1.0

        friction_coefficient = 0.5
        traction_cutoff = -5.0e4
        compression_cutoff = 1.0e6 # check for positivity of traction/compression cutoff

        max_combined_displacement = 0.01

        frictional_softening = true

        Residual_friction_coefficient = 0.6
        Slip_dw_for_friction = 1.0

        cohesion_softening = true
        softening_rate = 0.02

        flow_evolution_type = "Dilatancy dependence"

        Initial_hydraulic_width = 0.6

        Dilatant_hardening = 0.45

        Slip_dw_for_dilatancy = 1.0


[[CZM]]
    number_of_CZM = 3

    [czm1] # Pure opening CZM
    max_opening = 0.05
    activation_stress = 1.0e6
    # also available fracture_energy and energy_rate


    [czm2] # Shear and dilatancy CZM
    cohesion = 0.0
    peak_friction_coefficient = 1.0
    Residual_friction_coefficient = 0.6
    Slip_dw_for_friction = 1.0

    Dilatancy = on
    Initial_hydraulic_width = 0.6
    Dilatant_hardening = 0.45
    Slip_dw_for_dilatancy = 1.0

    [czm3] # Mohr-Coulomb CZM
    friction_coefficient = 0.5 #or friction angle
    cohesion = 1.0e5
    traction_cutoff = -5.0e4
    compression_cutoff = 1.0e6 # check for positivity of traction/compression cutoff
    max_combined_displacement = 0.01
    # also available max_opening and max_shear


[[fluid]]
    number_of_fluids=1
    [fluid1]
        law = "Newtonian"
        density = 1.0
        compressibility = 1.0
        viscosity = 3.0e-3

[[in-situ_conditions]] # per fracture
    number_of_states = 2

    [state1]
    orientation = global
    s_xx = 1.0      # sigma xx
    s_yy = 0.2      # sigma yy
    s_xy = -0.8     # sigma xy
    pp = 0.0        # pore pressure
    to_layers = ["layer1","layer2"]

    [state2]
    orientation = local
    s_xx = 1.0      # sigma xx
    s_yy = 0.2      # sigma yy
    s_xy = -0.8     # sigma xy
    pp = 0.0        # pore pressure
    to_layers = ["layer3"]

[[fault_properties]]
    number_of_fault_properties = 1

    [fault1]
    Initial_fault_permeability = 0.36 # [L^2] -> 0.6*0.6
    Permeability_increment = 0.0
    Slip_dw_for_permeability = 1.0
    to_layer = 1

[[injection_properties]]
    number_of_injection_points=1

    [[source1]]
    injection_rate = 0.0001
    constant_overpressure = 0.21


[[strategy]]
    [solver]
        type = "FixedPoint"
             # "NewtonRaphson"
             # "ConicalStuff"
        fail_over_strategy = skip # or exit


    [tolerance]
        tolerance_X = 1.0e-8
        # or "tolerance_W" ... opening
        # or "tolerance_P" ... pressure
        tolerance_FX = 1.0e-4
        time_step_max = 0.625
        time_step_min = 1.0e-5
        time_step_ini = 0.1
        max_global_iterations = 100
        max_failure_criteria_iterations = 100
        under_relaxation_parameter = 0.6

[[postprocess]]
    [variable]
        # save variables every X steps
        # output some plots
        # other stuff to output
        # (time per iteration, console verbose output...)



########################################################################################################################
        ##### to be reused somewhere
        # source
        active_injection=true
        location = "start" / "center" / "end"

        ## In the case of joined fracture, we load first the joined_with flag, where the connected fracture is defined.
        ## Then, once the connectivity between the layers has been loaded, a cross check of connections can be done.
        ## Then, a cross check of the layers end points must be done.
        ## For each group (represented by a group of layers) numbering is sequential.
        ## One fracture can be one group alone but one fracture cannot pertain to two or more groups.
        ## However material properties can be different at each fracture.
        ## (check that total number of layers is bigger than total number of materials)
##
##  HOWEVER, NO CROSSING OF ELEMENTS IS CHECKED!!
##