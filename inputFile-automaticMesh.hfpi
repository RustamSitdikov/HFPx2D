#
# HFPx2D project.
#
# Created by Lorenzo Benedetti on 06.09.17.
# Copyright (c) ECOLE POLYTECHNIQUE FEDERALE DE LAUSANNE, Switzerland,
# Geo-Energy Laboratory, 2016-2017.  All rights reserved.
# See the LICENSE.TXT file for more details.
#
#


###########   GEOMETRY   ###########
[[geometry]]
    #### Automatic mesh generation: FOR 1D MESHES ONLY ####

    # type of mesh generation
    mesh_generation = "automatic"

    # number of fractures (must coincide with following data
    number_of_fractures = 3

    # interpolation order of the elements (the same for every fracture)
    interpolation_order = 1


    # start the description of the fracture creation
    [fracture0] # linear mesh in the vertical direction

        # name of the meshed fracture
        name_of_fracture = "A first fracture"

        # start of the mesh
        x_1 = 0.0
        y_1 = 0.0

        # end of the wellMesh
        x_2 = 0.0
        y_2 = 5.0

        # number of elements
        number_of_elements=100

        # material properties are independent
        material_ID=0


    [fracture1]
        name_of_fracture = "A second fracture"

        x_1 = 1.0
        y_1 = 2.345

        x_2 = 5.887
        y_2 = -7.443

        number_of_elements=200

        material_ID=1

    [fracture2]

        name_of_fracture = "A second fracture with the material of the second one"

        x_1 = -5.0
        y_1 = -3.0

        x_2 = 2.0
        y_2 = 1.2

        number_of_elements=50

        material_ID=1


########################################################################################################################

###########   MATERIAL PROPERTIES   ###########
[[material_properties]]

    Young_modulus=1.0
    Poisson_ratio=0.24

    ## Also available
    # Lame_first
    # Bulk_modulus
    # Shear_modulus or Lame_second

    # Properties of existing fluid in the fault
    fluid_law = "Newtonian"
    fluid_density = 1.0
    fluid_compressibility = 1.0
    fluid_viscosity = 3.0e-3


    [material0]
        solid_evolution_type = "Cohesive Zone Model"

        cohesive_zone_type = "Pure opening"

        # Pure opening CZM
        failure_stress = 1.0e6
        max_opening = 0.05
        # fracture_energy is available as well

        flow_evolution_type = "Constant"

        permeability = 1.0


    [material1]
        solid_evolution_type = "Cohesive Zone Model"

        cohesive_zone_type = "Pure shear"

        failure_stress = 1.0e6
        max_slip = 0.1

        flow_evolution_type = "Dilatancy dependence"

        initial_permeability = 0.5

        opening_increase_per_slip = 0.01

        final_permeability = 1.0


[[in-situ_conditions]] # per fracture
    number_of_states = 2

    [state1]
    orientation = global
    s_xx = 1.0      # sigma xx
    s_yy = 0.2      # sigma yy
    s_xy = -0.8     # sigma xy
    pp = 0.0        # pore pressure
    to_layers = ["layer1","layer2"]

    [state2]
    orientation = local
    s_xx = 1.0      # sigma xx
    s_yy = 0.2      # sigma yy
    s_xy = -0.8     # sigma xy
    pp = 0.0        # pore pressure
    to_layers = ["layer3"]

[[fault_properties]]
    number_of_fault_properties = 1

    [fault1]
    Initial_fault_permeability = 0.36 # [L^2] -> 0.6*0.6
    Permeability_increment = 0.0
    Slip_dw_for_permeability = 1.0
    to_layer = 1

[[injection_properties]]
    number_of_injection_points=1

    [[source1]]
    injection_rate = 0.0001
    constant_overpressure = 0.21


[[strategy]]
    [solver]
        type = "FixedPoint"
             # "NewtonRaphson"
             # "ConicalStuff"
        fail_over_strategy = skip # or exit


    [tolerance]
        tolerance_X = 1.0e-8
        # or "tolerance_W" ... opening
        # or "tolerance_P" ... pressure
        tolerance_FX = 1.0e-4
        time_step_max = 0.625
        time_step_min = 1.0e-5
        time_step_ini = 0.1
        max_global_iterations = 100
        max_failure_criteria_iterations = 100
        under_relaxation_parameter = 0.6

[[postprocess]]
    [variable]
        # save variables every X steps
        # output some plots
        # other stuff to output
        # (time per iteration, console verbose output...)



########################################################################################################################
        ##### to be reused somewhere
        # source
        active_injection=true
        location = "start" / "center" / "end"

        ## In the case of joined fracture, we load first the joined_with flag, where the connected fracture is defined.
        ## Then, once the connectivity between the layers has been loaded, a cross check of connections can be done.
        ## Then, a cross check of the layers end points must be done.
        ## For each group (represented by a group of layers) numbering is sequential.
        ## One fracture can be one group alone but one fracture cannot pertain to two or more groups.
        ## However material properties can be different at each fracture.
        ## (check that total number of layers is bigger than total number of materials)
##
##  HOWEVER, NO CROSSING OF ELEMENTS IS CHECKED!!
##